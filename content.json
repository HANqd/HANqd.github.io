{"meta":{"title":"HANqd's BLOG","subtitle":"一个刚进军安全的小白。","description":null,"author":"HANqd","url":"https://hanqd.github.io","root":"/"},"pages":[],"posts":[{"title":"Python笔记——数据类型（整数、浮点数、数据类型转换）","slug":"Python数据类型（整数、浮点数、数据类型转换）","date":"2019-03-18T08:38:50.653Z","updated":"2019-03-18T08:55:51.672Z","comments":true,"path":"2019/03/18/Python数据类型（整数、浮点数、数据类型转换）/","link":"","permalink":"https://hanqd.github.io/2019/03/18/Python数据类型（整数、浮点数、数据类型转换）/","excerpt":"今天安装了pycharm,界面很好看，是一款好用的编译器。继续学习Python！","text":"今天安装了pycharm,界面很好看，是一款好用的编译器。继续学习Python！ 整数（int）&emsp; 整数包括正整数、负整数和零。Python中的整数范围是很大的。Python中整数还可以以几种不同的进制进行书写。0+“进制标志”+数字代表不同进制的数，进制标志有以下几种： 0o[0O]数字 表示八进制整数（例如：0o24/0O24） 0x[0X]数字 表示十六进制整数（例如：0x3F/0X3F） 0b[0B]数字 表示二进制整数（例如：0b101/0B101） 不带进制标志的为十进制数。&emsp; 注意：每种进制开头数字都是0；八进制的数字0后是小写字母o或大写字母O；但十进制不得以数字0开头书写；每种进制书写时数码不得超过进制规定的数码范围。整数运算符 运算符 描述 ** 乘方运算符 * 乘法运算符 / 除法运算符 // 整除运算符 % 取余运算符 + 加法运算符 - 减法运算符 位或 ^ 位异或 &amp; 位与 &lt;&lt; 左移运算 &gt;&gt; 右移运算 “//”运算符就是取商而丢弃余数，比如14//4=3|、^、&amp;、&lt;&lt;、&gt;&gt;运算符都是位运算符，要依据二进制形式进行运算。运算符优先级从高到低排列如下： ** *、/、% +、- |、^、&amp;、&lt;&lt;、&gt;&gt; 在同一个式子中，可以使用括号来修改运算符的优先级，即括号具有最高优先级。不必强记运算符的优先级，在没有把握的情况下可以运用括号。注意：“/”运算符的运算结果为浮点数，即时是两个整数相除。 浮点数（float）浮点数就是常用的带小数的数，当然整数部分也可以为零。浮点数的书写除了一般形式（如3.14）外，还有以下几种表示方法： 19. 小数部分为零，可以不写； .098 整数部分为零，可以不写； -2e3 科学计数法，表示-2*10^3 类型转换Python中常用的数据类型的相互转换，所使用函数如下： str(object=’’) 可以将整数和浮点数转换为字符串，默认建立空字符串 int(x,base=10) 将数字字符串或数值转换为整数（base表示进制） float(x) 将字符串或数值转换为浮点数 此外：str()可以创建一个空字符串，int()也可以建立一个默认值为0的整数，float()可以建立一个默认值为0.0的浮点数。【实例】注意：将字符串形式的数值转换为整数时，其中只能包含数字。input()函数接受键盘输入时，无论输入的是整数、浮点数还是字符串，Python得到的都是字符串，那么当需要整数或浮点数时都要进行类型转换。","categories":[],"tags":[]},{"title":"Python笔记——数据类型（字符串）","slug":"Python数据类型（字符串）","date":"2019-03-17T14:32:02.464Z","updated":"2019-03-17T14:56:50.802Z","comments":true,"path":"2019/03/17/Python数据类型（字符串）/","link":"","permalink":"https://hanqd.github.io/2019/03/17/Python数据类型（字符串）/","excerpt":"字符串主要用于存储和表示文本。Python中的字符串通常由“ ‘ ”、双引号“ “” ”、三个单引号或三个双引号包围的一串字符组成。","text":"字符串主要用于存储和表示文本。Python中的字符串通常由“ ‘ ”、双引号“ “” ”、三个单引号或三个双引号包围的一串字符组成。 Python的简单数据类型字符串 字符串主要用于存储和表示文本。Python中的字符串通常由“ ‘ ”、双引号“ “” ”、三个单引号或三个双引号包围的一串字符组成。 注意：单引号和双引号都是英文字符中的符号。 三种表示方法的区别和联系： 单引号字符串与双引号字符串本质上是相同的。但是单引号字符串里边不允许再出现单引号，例如：’aa’ss’cc’，这种是错误的，但是可以使用转义字符来输出’：’aaa”ss”aa’，这样正确，同理，双引号字符串也是，双引号里不能再出现双引号，但可以用转义字符。 三引号字符串可以由多行组成，单引号或双引号不行，当需要使用大段多行的字符串行就使用它。1234'''This is a function.Return a tuple.''' 转义字符串 \\n 换行符 \\t 制表符（Tab） \\r 回车（Enter） \\ “\\”字符 \\’ 单引号字符串中的单引号 \\” 双引号里的双引号 字符串运算“+”：连接字符串乘号 ：单字符串的多次连接‘aaa’+’bbb’ ——&gt;’aaabbb’“python”*3 ——&gt;python python python 字符串处理函数常见的字符串函数 string.capitalize() 将字符串的第一个字母大写 string.count() 获得字符串中某一子字符串的数目 string.find() 获得字符串中某一子字符串的起始位置，无则返回-1 string.isalnum() 检测字符串是仅包含0-9A-Za-z string.isalpha() 检测字符串是仅包含A-Za-z string.isdigit() 检测字符串是仅包含数字 string.islower() 检测字符串是否均为小写字母 string.isspace() 检测字符串中所有字符是否均为空白字符 string.istitle() 检测字符串中的单词是否为首字母大写 string.isupper() 检测字符串是否均为大写字母 string.join() 连接字符串 string.lower() 将字符串全部转换为小写 string.split() 分割字符串 string.swapcase() 将字符串中大写字母转换为小写，小写字母转换为大写 string.title() 将字符串中的单词首字母大写 string.upper() 将字符串中的全部字母转换为大写 len(string) 获取字符串长度 其中split()函数返回以指定的字符将字符串分割成为列表形式并返回，但并不改变原字符串，原型如下：split([sep[,maxsplit]]) sep：可选参数，指定分割的字符，默认为空格 maxsplit：可选参数，分割次数 join()函数将原字符串插入参数字符串中的每两个字符之间。如果参数字符串中只有一个字符，那么返回参数字符串。同样，join()并不改变原字符串，只是返回一个新的字符串。","categories":[],"tags":[]},{"title":"你好，hexo","slug":"你好，hexo","date":"2019-03-15T08:45:25.000Z","updated":"2019-03-15T08:45:25.929Z","comments":true,"path":"2019/03/15/你好，hexo/","link":"","permalink":"https://hanqd.github.io/2019/03/15/你好，hexo/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-15T03:01:22.322Z","updated":"2019-03-16T04:18:31.716Z","comments":true,"path":"2019/03/15/hello-world/","link":"","permalink":"https://hanqd.github.io/2019/03/15/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}